추상클래스

1. 추상클래스란
	- 메서드의 구현체가 정의되지 않음(추상메서드)
	- 공통적인 기능도 구성 가능
		- 구현체가 있는 인스턴스 메서드
		- 인스턴스 변수
		
2. 추상클래스 문법

abstract

3. 추상클래스를 만드는 이유

추상메서드는 반드시 하위 클래스가 구현해야하는 규칙
- 설계 원칙

4. 추상클래스와 다형성

5. final 예약어

인터페이스

1. 인터페이스란?

interface : 설계(추상메서드만 정의 가능)

2. 클래스에서 인터페이스 구현하기

class 클래스 implements 인터페이스{

}

implements - 구현

3. 인터페이스 구현과 형변환(다형성)

4. 인터페이스의 요소 살펴보기
- 변수를 정의 -> public static final이 자동으로 붙는다.(정적변수화)

클래스는 여러 인터페이스를 구현
implements 인터페이스1,인터페이스2...
- 상속(extends)은 하나의 클래스만 가능(클래스간 동일명 메서드가 충돌하기 때문)
- 인터페이스는 구현체가 없기 때문에 동일명 메서드의 충돌이 없다.

자바1.7 - 인터페이스에서 인스턴스메서드 작성하기
default 자료형 메서드명(){
	인터페이스 간 동일 인스턴스메서드명이 충돌하지 않게 명확히 해야 함
}

주문(Order)
- 판매(Sell)
- 구매(Buy)

- 콜렉션 프레임워크
	List 인터페이스
	
	list 
	

인터페이스 활용하기
1. 한 클래스가 여러 인터페이스를 구현하는 경우
2. 두 인터페이스의 디폴트 메서드가 중복되는 경우
3. 인터페이스 상속하기

-------------------------------------------------------------

내부 클래스
클래스 내부의 정의된 클래스

1. 인스턴스 내부 클래스
	- 인스턴스가 생성되어야 생성할 수 있는 클래스
	- 멤버변수,멤버메서드 - 인스턴스 자원
	- 외부클래스 생성자 생성 -> 외부클래스.내부클래스 변수명 = 외부클래스변수명.new 내부클래스(); 로 만들어서 사용
	- 정적 자원을 정의할 수 없다.(인스턴스가 생성된 후에 정의되기 때문에)
	- jdk16버전 부터는 정의 가능하게 바뀌었다.

2. 정적 내부 클래스
	- 객체 생성과 무관한 클래스
	- 외부 클래스의 인스턴스 생성과 무관하다.
	- 일반 클래스와 차이점이 적다.
	- static class 클래스명
	- 외부클래스.내부클래스 변수명 = new 외부클래스.내부클래스();
	- this가 없다.(외부 클래스 인스턴스 자원에 접근 못한다.)


3. 지역 내부 클래스(매우 중요함)
	- 메서드 내부에 정의된 클래스
	- 메서드 내부에 생성된 객체
	
	추상클래스, 인터페이스 객체가 생성되는 조건
	1) 환경 - 지역 내부, 멤버 변수로 정의되는 경우
	2) 미구현된 메서드를 정의함
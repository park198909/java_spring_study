객체지향 프로그래밍

생성자
	- 객체를 생성할 수 있는 역할을 가지고 있는 메서드

1. 디폴트 생성자
	- 생성자가 아무것도 정의X -> 컴파일러가 자동 추가하는 생성자
	- 구현코드X, 매개변수X
	- 생성자를 임의로 정의할 경우 기본생성자는 정의되지 않는다.
	
2. 생성자 오버로드
함수의 시그니쳐
	- 반환값 자료형 + 함수명 + 매개변수

3. 참조 자료형
		- 기본 자료형	
			숫자,문자 등의 내장되어 있는 자료형
		- 참조 자료형
			모든 클래스
			
용어정리
1. 인스턴스(Instance)
	- 실체,객체,실제로 메모리에 존재하는 개념
			
정보 은닉
1. 접근 제어자
	- public : 외부,내부 패키지에 상관없이 전부 접근 가능
	- protected : 동일패키지에서만 접근 가능
								-> 상속을 통해서 외부패키지에서 접근가능
								-> private + default
	- [default] : 따로 정의하지 않을 때, 동일패키지에서만 접근 가능 
	- private : 클래스 내부에서만 접근 가능
	
	- 멤버변수 : 통제불가->private
	- 멤버변수의 값을 지정하고, 조회 별도의 메서드를 정의
	
2. get(),set()메서드
- getter, setter
- 멤버변수의 값을 지정(setter)하고 조회(getter)
- getXXX()		// 조회
- setXXX(...)	// 지정 및 수정

3. 정보은닉이란?
	- 멤버변수의 입력값을 통제하기 위해서

this예약어
- 지역변수 일때
	- 멤버(인스턴스) 메서드의 지역 변수
	- 생성될 객체의 주소값을 가지고 있는 지역변수
- 메서드 일때
	- this(), this(...)
	- this의 값을 일괄로 입력할 때 사용
	- this(값1,값2,값3,...) 
		-> this.값1 = 값1,this.값2 = 값2,this.값2 = 값2,
	- 생성자 메서드 : 클래스 내부에서 사용 가능한 

static 변수,메서드 
static : 정적인(고정된,움직이지 않는)
static 변수 : 정적메모리에 있는 변수
	- 정적변수는 클래스.정적변수로 접근가능하다.
	
static 메서드 : 정적메모리에 있는 메서드

정적메모리(데이터영역)
동적메모리(스택,힙 영역)

	1) 클래스변수 = static 변수
	2) 클래스 메서드 = static 메서드
		- 지역변수인 this가 없다.
		- this로 접근가능한 인스턴스 자원을 사용불가
		- 처음부터 활성화 되어 있는 정적변수, 정적메서드는 사용 가능
	3) 인스터스 메서드
		- 정적자원에 접근이 가능하다.
		- 인스턴스 자원보다 먼저 생성되어 있기 때문

변수의 유효범위
1. 지역변수:스택 영역에서 활성화 되고 제거되는 변수
2. 멤버변수(인스턴스 변수):힙 영역에서 활성화 되고,
										가비지콜렉터(GC)에 의해서 수거되는 변수 
3. static변수(클래스 변수):데이터 영역에서 활성화
	- static final 변수 = 클래스명.변수명으로 바로 접근가능
	- final 변수 = 생성자를 통해야 접근가능

static응용 - 싱글톤 패턴
- java.lang.Math
- 객체를 1개만 만들어서 공유
- 

데이터영역
	- 변하지 않는 자원
	- 상수(final)
	- 메서드 정의
	- 리터럴 상수


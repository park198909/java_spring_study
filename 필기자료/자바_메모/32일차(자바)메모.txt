I/O패키지

표준입출력
1. System.in : 콘솔 터미널 읽기	
	InputStream : 바이트 단위 스트림
	
2. System.out
	PrintStream : 문자 단위 스트림
			참고) PrintWriter

3. System.err : 출력이 붉은색
	PrintStream : 문자 단위 스트림
		
	
PrintStream
	Print() : 값의 출력
	Println() : 값의 출력 + 줄개행(\n)
	Printf() : 형식화(Format) 출력
		- %s : 문자열
		- %c : 문자
		- %d : 정수
		- %f : 실수
		- %n : 줄개행
	setErr() 
	setIn()
	setOut()
	
메타문자
	\n : 줄개행(LF)
	\t : 1탭키
	\f : 페이지 개행
	\b : 백스페이스
	\r : 커서를 가장 앞으로 이동(CR)
		- 엔터(\r\n)

File - 파일, 디렉토리
개발 -> 윈도우즈,  개발->리눅스서버
경로			(\)					(/)
환경변수	(;)						(:) 
	canExcute() : 실행권한
	canRead() : 읽기권한
	canWrite() : 쓰기권한
	createNewFile() : 파일 생성
	createTempFile() : 임시파일 생성
	delete() : 파일 삭제
	deleteOnExit() : 실행완료되면 파일 삭제
	exists() : 디렉토리 확인 후 없으면 생성
	getAbsoluteFile() : 해당 절대경로의 파일형태 가져오기
	getAbsolutePath() : 해당 절대경로의 경로이름 가져오기
	getCanonicalFile() : 해당 상대경로의 파일형태 가져오기
	getCanonicalPath()
	getName()
	isFile()
	isHidden()
	length()
	list()
	mkdirs() : 하위 디렉토리까지 모두 생성
	separator() : OS별 경로 구분 문자 인식
	pathSeparator() : OS별 환경 변수 구분 문자 인식

. - 현재 경로
.. - 상위 경로



직렬화(Serialization) : 객체마다 다른 값을 가지는 데이터를 복구 가능하게 직렬화 가능
1. ObjectInputStream : 직렬화된 데이터 -> 원래 객체로 변환
2. ObjectOutputStream	: 원래 객체 -> 직렬화된 데이터로 변환

3. 직렬화가 가능한 클래스 만들기
	- Serializable 클래스 implement하기
		
	- transient : 직렬화 제외
4. 직렬화 가능한 클래스의 버전관리

-----------------------------------------------------------------------------------------------

날짜와 시간

1. Date(JDK 1.0)

Locale : 지역화
(java.util.Locale)

2. Calendar(JDK 1.1)
	- 직접 생성자를 통해서 객체 생성 X(new)
	- static Calendar getInstance()
		- 지역화 정보에 따라서 달력 객체를 달리 생성
			GregorianCalendar
			BuddhistCalendar
			
	조회
		int get(int field)
	변경
		void set(int field, int amount)
		void set(int year, int month, ...)
		
	날짜,시간 가감
		void add(int field, int amount) : 시간이 자연히 변환
		void roll(int field, int amount) : 지정된 부분만 반복
			+
			-
	

java.time 패키지(JDK 1.8)
1. java.time
2. java.time.format
3. java.time.temporal
	- TemporalUnit : 날짜,시간 단위
		- Enum ChronoUnit
	- TemporalField : 날짜,시간 항목
		- Enum ChronoField
		
4. java.time.zone
	- 시간대와 관련


java.time 패키지의 핵심 클래스
Temporal
TemporalAccessor
TemporalAdjustor

1. LocalDate : 날짜
2. LocalTime
3. LocalDateTime
4. ZoneDateTime
5. OffsetDateTime
6. Period 와 duration

java.time 객체 생성하기
- now() : 현재 날짜 반환
- of() : 입력한 날짜 반환


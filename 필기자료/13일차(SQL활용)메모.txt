복습

DDL : 사용자 테이블 생성 및 삭제 등, 데이터정의어 , 롤백 불가
생성
CREATE USER ... IDENTIFIED BY ...;
	PASSWORD EXPIRE;
	ACCOUNT UNLOCK [LOCK];
CREATE ROLE ROLE명;
CREATE TABLE 테이블명( 컬럼명 자료형 CONSTRAINT 제약조건명 [제약조건], ... );
	AS SELECT 테이블명;
CREATE INDEX 인덱스명 ON 테이블명(컬럼1 ASC[DESC] , ...);
CREATE VIEW 뷰명 AS SELECT 컬럼명 FROM 테이블명; 	
	WITH READ ONLY;
	WITH CHECK OPTION;
CREATE OR REPLACE VIEW 뷰명 AS SELECT 컬럼명;
CREATE SEQUENCE 시퀀스명;
	INCREMENT BY N
	START WITH N
	MAXVALUE N
	MINVALUE N
	CYCLE
	CACHE 
CREATE [PUBLIC] SYNONYM 동의어명 FOR 스키마명.테이블명;


수정
ALERT USER ... IDENTIFIED BY ...;
	PASSWORD EXPIRE;
	ACCOUNT UNLOCK [LOCK];
ALTER TABLE 테이블명;
	ADD 컬럼명 자료형 [제약조건];
	MODIFY 컬럼명 자료형 CONSTRAINT 제약조건명 [제약조건];
	RENAME CONSTRAINT 제약조건명 TO 변견제약조건명;
	DROP CONSTRAINT 제약조건명;
	RENAME COLUMNS 기존컬럼 TO 변경컬럼;
ALTER SEQUENCE 시퀀스명;


테이블명 변경
RENAME TABLE 기존테이블명 TO 테이블명;


삭제
DROP USER ...;
	CASCADE;
DROP ROLE ...;
TRUNCATE TABLE ...;


**********************************************************************************************************************************

DML : 테이블명 객체정보 등을 관리, 데이터조작어, 롤백가능
INSERT INTO ... VALUES ...;
UPDATE 

**********************************************************************************************************************************
DCL : 권한부여

**********************************************************************************************************************************
제약조건

**********************************************************************************************************************************
자료형
	숫자
		NUMBER(전체자리수,[소수점자리수])
		- NUMBER(5);					// 5자리 정수
		- NUMBER(5,2);					// 3자리정수.2자리소수	
	
	문자
		CHAR(자리수)
		- CHAR(5); 					// 5자리 크기(5byte)의 공간이 생성
								// 자리수가 작아도 최대공간을 점유함
		VARCHAR2(자리수)
		- VARCHAR2(5);					// 최대 5자리 크기(5byte)의 공간이 생성
								// 자리수가 작으면 공간크기를 조절함
		NVARCHAR2(자리수)
		- NVARCHAR(5);					// 최대 5자리 크기(5byte)의 공간이 생성
								// 글자1자의 크기가 증가된다.
	
	날짜
		DATE
		- TO_DATE('문자열','형식');				// DATE의 형식 변경
		- SYSDATE					// 현재시간

	기타
		CLOB(Character Large OBject)			// 여러줄 텍스트
		MySQL) TEXT, LONGTEXT





**********************************************************************************************************************************




SQL활용
------------------------------------------------------------------------------------------------------------------------------------
WHERE절
집합연산자(IN, UNION, MINUS,NOT IN)

집합의 절대조건 : 집합에는 중복값이 없다. 단, UNION ALL은 중복을 허용한다.
A = 1,2,3,4,5,6
B = 4,5,6,7,8
A B 합집합 = 1,2,3,4,5,6,7,8
A B 교집합 = 4,5,6
A B 합집합 = 1,2,3,7,8


IN
SELECT ... FORM ... WHERE 컬럼명 IN ('값1','값2', ...);			// 컬럼명의 값들을 포함하는 데이터들만 출력 
- OR연산자를 간략하게 사용 가능하다.


BETWEEN
SELECT ... FROM ... WHERE 컬럼명 BETWEEN 값1 AND 값2;		// 컬럼명에서 값1 과 값2 사이의 값들을 출력


LIKE
	- 와일드카드( % | _ ) 패턴을 토대로 검색
	- 와일드카드를 문자로 사용할때 : ESCAPE -> LIKE '%[구분값_,%]패턴' ESCAPE '구분값'; 
					    -> 구분값의 다음단어를 문자로 인식시킨다.
SELECT ... FROM ... WHERE 컬럼명 LIKE '패턴'; 
SELECT ... FROM ... WHERE 컬럼명 LIKE '%패턴';
SELECT ... FROM ... WHERE 컬럼명 LIKE '패턴%';
SELECT ... FROM ... WHERE 컬럼명 LIKE '%패턴%';			// 컬럼 내 와일드카드를 포함한 패턴을 모두 검색
SELECT ... FROM ... WHERE 컬럼명 LIKE '패턴';
SELECT ... FROM ... WHERE 컬럼명 LIKE '_패턴';
SELECT ... FROM ... WHERE 컬럼명 LIKE '__패턴';
SELECT ... FROM ... WHERE 컬럼명 LIKE '_패턴_';				// 패턴의 앞뒤로 붙은 글자 수를 지정하여 검색 

IS [NOT] NULL
	- 연산식에 NULL을 넣어도 검색하는 기능
SELECT ... FROM ... WHERE 컬럼명 IS NULL;				// 값이 NULL인 대상만 조회
SELECT ... FROM ... WHERE 컬럼명 IS NOT NULL;				// 값이 NULL이 아닌 대상만 조회

------------------------------------------------------------------------------------------------------------------------------------

내장함수

단일행 함수
	- 각각의 값을 바꾸는 함수
ROUND -> 반올림
SELECT ROUND(SAL,-2), SAL, ENAME FROM EMP;

다중행 함수
	- 여러행의 값을 바꾸는 함수(값이 1새로 나옴)
SUM -> 합계
SELECT SUM(SAL) FROM EMP;


문자함수
	1) UPPER('문자열') : 소문자 -> 대문자
	2) LOWER('문자열') : 대문자 -> 소문자
	3) INICAP('문자열') : 첫자는 대문자, 나머지는 소문자
	4) LENGTH('문자열') : 문자 갯수(공백포함)
	5) LENGTHB('문자열') : 문자 BYTE수(한글 : 3 BYTE)
		MySQL - LENGTH : BYTE 수
		          - CHAR_LENGTH : 글자 수
	6) SUBSTR('문자열',시작위치,[추출길이])
		- 시작위치는 1부터(음수은 끝에서부터1) 추출길이 까지(없으면 끝까지) 문자열 추출
	7) INSTR('문자열','찾는단어',[시작위치]) : 시작위치부터(없으면 처음부터) 찾으면 위치값(1부터), 없으면 0을 반환
		- LIKE의 대체제로 사용 가능
		- 문장.indexOf(단어) : 단어의 위치(0부터시작) , 없으면 -1 반환
	8) REPLACE('문자열','찾는문자','대체할 문자')
	9) LPAD('문자열',총 자리수, '채울 문자') : 문자열의 '왼쪽'을 '총 자리수'에 맞게 '채울 문자'로 채움
	10) RPAD ('문자열',총 자리수, '채울 문자') : 문자열의 '오른쪽'을 '총 자리수'에 맞게 '채울 문자'로 채움
	11) CONCAT('문자열','문자열') : 두 문자열 결합, 매개변수가 2개만 가능
		- 문자열결합연산자( || ) : 문자열 || 문자열 || 문자열 || 문자열
		- MySQL : 여러개 문자열 결합가능(가변매개변수)
	12) TRIM([방향] ['제거할문자' FROM] '문자열') 
		- 공백,'제거할 문자' 제거 및 제거방향 설정(BOTH는 양쪽, LEADING 왼쪽, TRAILING 오른쪽)	
	13) LTRIM('문자열',['제거할문자'] ) : 왼쪽의 '제거할문자' 제거
	14) RTRIM(['문자열',['제거할문자']) : 오른쪽의 '제거할문자' 제거


숫자함수
	1) ROUND(수치,[반올림위치]) : 반올림위치('0'은 소수점1의자리, 음수는 정수자리, 양수는 실수자리 )까지 반올림
	2) CEIL(수치,[올림위치]) : 올림위치('0'은 소수점1의자리, 음수는 정수자리, 양수는 실수자리 )까지 올림
	3) FLOOR(수치,[버림위치]) : 버림위치('0'은 소수점1의자리, 음수는 정수자리, 양수는 실수자리 )까지 버림
	4) TRUNK(수치,[절사위치]) : 절사위치('0'은 소수점1의자리, 음수는 정수자리, 양수는 실수자리 )까지 절사
	5) MOD(수치,나눌숫자]) : 수치에서 나눌숫자를 나누고 난 나머지

날짜함수
	1) SYSDATE : 현재 날짜
	2) ADD_MONTHS(날짜, 개월 수) : 날짜에서 개월 수만큼 전(음수) 또는 후(양수) 
	3) MONTHS_BETWEEN(날짜,날짜) : 날짜와 날짜 사이의 개월 수
	4) NEXT_DAY(날짜,'요일') : 날짜와 가까운 다음번 '해당요일' -> 금요일 -> 다음주 금요일
	5) LAST_DAY(날짜) : 날짜가 있는 달의 마지막 날짜'	 -> 3월 -> 3월 마지막 날짜
날짜 데이터 + 숫자 -> 숫자 만큼 일수 증가
날짜 데이터 - 숫자 -> 숫자 만큼 일수 감소
날짜 데이터 - 날짜 데이터 -> 두 날짜의 일수 차이
날짜 데이터 + 날짜 데이터 -> 연산 X

자료형 변환함수
	1) TO_CHAR(숫자 및 날짜데이터, [변환할 형식]) : 숫자,날짜 데이터 -> 형식화된 문자
	2) TO_NUMBER(문자로 된 숫자, [변환할 형식]) : 형식화된 문자로 된 숫자 -> 숫자
	3) TO_DATE(문자로 된 날짜, [변환할 형식]) : 형식화된 문자로된 날짜 -> 날짜
		- 예상가능한 문자형식는 오라클이 자동으로 변환한다.
		- 날짜 표기법 참고사항(특이사항)
			- YY,RR => YY(현재연도표기), RR(가까운연도표기) => 81 YY(2081) RR(1981) 
			- HH, HH12, HH24 => HH=HH12=12시간단위 표기, HH24=24시간단위 표기
			- MI(분), SS(초)

NULL처리함수
- NULL은 값이 없음, 연산불가
	1) NVL(컬럼명,기본값(NULL일때)) : 컬럼의 값이 NULL이면 기본값으로 대체
	2) NVL2(컬럼명,값1,값2) : 컬럼의 '값이 있으면 값1', 'NULL이면 값2' 로 대체

SWITCH~CASE문
	1) DECODE(컬럼명,
		값1, 조건식1
		값2, 조건식2
		...)		// 컬럼명이 값1이면 조건식1, 값2명 조건식2, ...실행 
	2) CASE 컬럼명
		WHEN 값1 THEN 조건식1
		WHEN 값2 THEN 조건식2
		WHEN 값3 THEN 조건식3
		...
		ELSE 조건식
		END		// 컬럼명이 값1이면 조건식1, 값2명 조건식2, ...실행 ELSE는 모두 해당X일때





















































스트림(Stream)
java.util.stream - 편의기능 패키지


스트림이란?
- 데이터 소스(배열,컬렉션)가 무엇이든 간에 같은 방식으로 다룰 수 있는 추상화

1. 처리의 통일성
	배열,컬렉션 모두 동일한 스트림으로 변환하여
	동일방식으로 처리 가능(Stream내 메서드 사용 가능)
2. 원본 데이터는 유지
3. 스트림은 일회용
	- 소비하면 끝
	- 다시 실행하려면 스트림을 다시 생성해야 함
4. 내부 반복을 지원
	- stream().forEach(내부반복할 명령);


스트림의 기본 자료형
	- Stream<T> : 일반 자료형 스트림
		- concat(스트림1, 스트림2) -> 스트림1,2를 결합
		- filter() -> 걸러내기
		- distinct() -> 중복값 제거
		- sort() -> 정렬
		- map() -> 데이터 변환
	- IntStream : int자료형 스트림
		- 언박싱이 발생하지 않아 연산효율이 늘어난다.
		- 숫자와 관련된 기능 추가(통계관련)
		- range(숫자1,숫자2) -> 숫자1부터 (숫자2)-1 까지 범위 제한
		- rangeClosed(숫자1,숫자2) -> 숫자1부터 (숫자2) 까지 범위 제한

		
		

스트림 만들기
1. 컬렉션
	- Collection 인터페이스에 있음
		- Stream<T> stream(); 
2. 배열
	- Arrays.stream();
3. 특정 범위의 정수
4. 임의의 수
	- java.util.Random 패키지
		- limit(갯수) : 생성되는 스트림의 갯수를 제한


스트림의 연산
1. 중간 연산
	- 반환값이 Stream
	- 메서드 체이닝
	- 진행할 작업을 나열가능
	- 연산은 최종 연산 후에 실행(지연된 연산)
2. 최종 연산
	- 반환값이 Stream이 아님
	- Stream을 최종 소비하고 연산종료
	

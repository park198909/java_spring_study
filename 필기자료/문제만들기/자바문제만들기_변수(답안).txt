자바 문제 만들기

1. 기본자료형 공간의 크기 빈칸 채우기
	숫자
		정수
			1BYTE = 답) byte
			2BYTE = 답) short
			4BYTE = 답) int
			8BYTE = 답) long
		실수
			2BYTE = 답) float
			4BYTE = 답) double
	문자
		2BYTE = 답) char
	논리형
		1BYTE = 답) boolean
		
				
2. 리터럴 상수에 대해 설명하시오(다른 사람에게 설명 가능하면 정답)
	답) 저장공간(메모리)에 저장된 상수값이며 변수에 대입이 가능한 값이다.
		

3. 다음 중 자동형변환이 안되는 경우는?
 1) int자료형 = short자료형;
 2) double자료형 = int자료형;
 3) int자료형 = char자료형;
▶4) long 자료형 = float자료형;		// long에 float을 넣으면 소수점 아래 값이 없어져 결과값이 바뀐다.
 5) short자료형 = byte자료형;


4. 다음 연산자들의 우선순위를 작성하시오. -> 대입연산자, 논리연산자, 비교연산자, (산술연산자)
	답) 대입연산자 < 논리연산자 < 비교연산자 < (산술연산자)
	-> (...)내부의 연산자는 가장 높은 우선순위를 가진다.
	-> 논리연산자는 비교연산자의 결과값(참,거짓)을 항으로 하기 때문에 우선순위가 낮다.
	-> 대입연산자는 연산의 최종결과를 변수에 대입할 때 사용하므로 가장 마지막에 연산된다.


5. 다음 코드의 실행 시 출력값은?
	int num = 10;																// num = 10				
	int result = num++;													// result = 10, num = 11			
	int result2 = ++num;												// result2 = 12, num = 12
	System.out.println("result = "+result);		
	System.out.println("result2 = "+result2);	
	답) result = 10
		 resul2 = 12
			
			
6. 다음 반복문 중 조건식이 만족되지 않아도 최소 1회는 실행되는 반복문은?
 1) for문
 2) while문
▶3) do~while문					// 조건식이 실행코드 뒤에 있기때문에 최초1회는 무조건 실행된다.
 4) 향상된 for문
 5) 중첩반복문


7. 다음 코드 중 배열선언 및 초기화가 불가능한 코드는?
	1) int[] ar = new int[3];
	2) int ar[] = new int[3];
	3) int ar[] = {10,20,30};
	4) int[] ar; 
	 ar	= new int[] {10,20,30};
▶5) int[] ar; 
	 ar	= {10,20,30};
	-> 배열선언과 초기화를 따로 할 경우는 new 자료형[]을 생략할 수 없다.
	
	
8. 10,20,30의 3개의 값이 담겨있는 nums배열의 길이를 알수있는 코드를 작성하시오.
	답) int[] nums = new int[] {10,20,30};
		 System.out.println(nums.length);


9. 논리형 연산의 경우 결과값(참,거짓)이 확정되면 뒤의 연산은 진행하지 않게되는데, 이 기능의 명칭은?
	답) 단락회로평가(외워야함)



10. 빈칸 채우기
	- 객체(object)란 [ 1 ]과 [ 2 ]의 [  3  ]으로 이루어져 있다.
	답) 1:변수, 2:함수(메서드), 3:상호작용
	-> 자바에서의 객체는 작성한 코드를 토대로 실제로 저장공간에 만들어 지고 실행된다.


11. 자료구조 중 다음의 해당하는 영역의 이름은?
	10-1) 함수(메서드)가 저장되는 영역
	답) 스택 영역
	10-2) 자바코드&상수가 저장되는 영역 
	답) 데이터 영역
	10-3) 객체가 저장되는 영역
	답) 힙 영역
	

12. 생성자함수를 통해 참조자료형 변수를 선언할 시 
함수의 시그니처를 다르게하여 여러개의 함수를 정의하는데
이를 무엇이라고 하는가?
	답) 메서드 오버로드
	-> 메서드 오버로드가 필요한 이유는 힙에 저장된 객체가
	각 참조변수 별로 나뉘어 저장되야 하기 때문이다.
